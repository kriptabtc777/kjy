import logging 
from aiogram import Bot, Dispatcher, executor, types
import markups as nav

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "2132885848:AAHwhChFrVIYjsxHo5Xr89EDlNpA9aNcxQQ" 

bot = Bot(token = TOKEN)
dp = Dispatcher(bot)


#buttons 

contactButtons = InlineKeyboardMarkup(row_width=1)
btnInst = InlineKeyboardButton(text='üßø Instagram', url='https://instagram.com/kiev.exchange')
btnTg = InlineKeyboardButton(text='üì≤ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É', url='https://t.me/kiev_exchange_chat')
contactButtons.add(btnInst).add(btnTg)

#manager button 

managerButton = InlineKeyboardMarkup(row_width=1)
btnTgManager = InlineKeyboardButton(text='üì≤ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É', url='https://t.me/kiev_exchange_chat')
managerButton.add(btnTgManager)


# @dp.message_handler(commands=['start'])
# async def command_start(message: types.Message):
# 	await message.answer_photo('https://1944718.artcoco.web.hosting-test.net/evacuation_post.png')
# 	await bot.send_message(message.from_user.id, '–í—ñ—Ç–∞—î–º–æ!üá∫üá¶üá∫üá¶üá∫üá¶\n\n–í–∏ –∑–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ —á–∞—Ç-–±–æ—Ç—É —Ü–µ–Ω—Ç—Ä—É –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ "–ï–≤–∞–∫—É–∞—Ü—ñ—è".\n\n–Ø–∫—â–æ –í–∏ –∞–±–æ –í–∞—à —Ä–æ–¥–∏—á –ø–æ—Ç—Ä–µ–±—É—î –Ω–µ–≥–∞–π–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ –∑ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–Ω—è, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É –∑–∞–∑–Ω–∞—á–∏–Ω—É –Ω–∏–∂—á–µ —ñ –º–∏ –Ω–µ–æ–¥–º—ñ–Ω–Ω–æ –Ω–∞–¥–∞–º–æ –¥–æ–ø–æ–º–æ–≥—É!'.format(message.from_user), reply_markup = urlButtons)

# @dp.message_handler()
# async def bot_message(message: types.Message):
# 	#await bot.send_message(message.from_user.id, message.text)
# 	if message.text != '/start':
# 		await bot.send_message(message.from_user.id, '–í–∏–±–∞—á—Ç–µ! \n –ê–ª–µ –º–∏ –Ω–µ –∑–º–æ–≥–ª–∏ —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏ –í–∞—à –∑–∞–ø–∏—Ç. \n –°–∫–æ—Ä–∏—Å—Ç–∞–π–µ—Ç—Å—å –∫–æ–º–∞–Ω–¥–æ—é /start')


# if __name__ == '__main__':
# 	executor.start_polling(dp, skip_updates = True)



@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
	await bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!'.format(message.from_user), reply_markup = nav.mainMenu)

@dp.message_handler()
async def bot_message(message: types.Message):
	if message.text == 'üí± –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã':
		await bot.send_message(message.from_user.id, 'üí± *–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã*\n\n–ü–æ–∫—É–ø–∫–∞ - –ø—Ä–æ–¥–∞–∂–∞\nüá∫üá∏ USD 0.0000 - 0.0000\nüá™üá∫ EUR 0.0000 - 0.0000\nüá¨üáß GBP 0.0000 - 0.0000\n\n–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º. '.format(message.from_user), parse_mode= 'Markdown', reply_markup = managerButton)
	elif message.text == 'üíµ –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã':
		await bot.send_message(message.from_user.id, 'üíµ *–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã*\n\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º –æ–±–º–µ–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –Ω–µ—É–¥–æ–±—Å—Ç–≤–æ.\n\n–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –æ–±–º–µ–Ω —Å–≤—è–∑–∞–≤—à–∏—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–ºüëá'.format(message.from_user), parse_mode= 'Markdown', reply_markup = managerButton)
	elif message.text == 'üìã –£—Å–ª—É–≥–∏ –∫–æ–º–ø–∞–Ω–∏–∏':
		await message.answer_photo('https://i.ibb.co/YDn4ckh/service.png')
		await bot.send_message(message.from_user.id, 'üìã *–£—Å–ª—É–≥–∏ –∫–æ–º–ø–∞–Ω–∏–∏*\n\nüíé *–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫—Ä–∏–ø—Ç–æ–π*\n–ü–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ BTC, ETH, USDT –∑–∞ –Ω–∞–ª–∏—á–Ω—ã–µ –¥–æ–ª–ª–∞—Ä—ã, –µ–≤—Ä–æ, –≥—Ä–∏–≤–Ω—ã –∏ –¥—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã.\n\nüá®üá≥ *–û–ø–ª–∞—Ç–∞ –Æ–∞–Ω—è*\n–Æ–∞–Ω—å –ø–æ –ª—É—á—à–µ–º—É –∫—É—Ä—Å—É. –ù–∞–ª–∏—á–Ω—ã–π –∏ –±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á—ë—Ç. –û–ø–ª–∞—Ç–∞ —Å—á–µ—Ç–æ–≤/–∏–Ω–≤–æ–π—Å–æ–≤ –±—ã—Å—Ç—Ä–æ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ.\n\nüåê *–î–µ–Ω–µ–∂–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã*\nWire Transfer (SWIFT-SEPA), –æ–ø–ª–∞—Ç–∞ –∏–Ω–≤–æ–π—Å–æ–≤.\n\nüöì *–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è*\n–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –≤—Å–µ–π –£–∫—Ä–∞–∏–Ω–µ –∏ –ï–≤—Ä–æ–ø–µ –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º 100% –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.\n\nüí≥ *–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç*\n–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç VISA/MASTERCARD –ø–æ —Å–∞–º—ã–º –≤—ã–≥–æ–¥–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º.\n\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! üëáüèª'.format(message.from_user), parse_mode= 'Markdown', reply_markup = managerButton)
	elif message.text == 'ü™ô –ü–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏':
		await bot.send_message(message.from_user.id, 'ü™ô *–ü–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏*\n\n–î–µ–Ω–µ–∂–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ –£–∫—Ä–∞–∏–Ω–µ –∏ –≤—Å–µ–º—É –º–∏—Ä—É —Å —Å–∞–º—ã–º –≤—ã–≥–æ–¥–Ω—ã–º –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∫—É—Ä—Å–æ–º –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç.\n\n–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.'.format(message.from_user), parse_mode= 'Markdown', reply_markup = managerButton)
	elif message.text == 'üè¶ Kiev Exchange üè¶':
		await message.answer_photo('https://i.ibb.co/cL75yK1/kiev-exchange.png')
		await bot.send_message(message.from_user.id, '*Kiev Exchange* ‚Äî –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏. –ë–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã, –≤—ã–≥–æ–¥–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –∏ —Ö–æ—Ä–æ—à–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.'.format(message.from_user), parse_mode= 'Markdown', reply_markup = contactButtons)


if __name__ == '__main__':
	executor.start_polling(dp, skip_updates = True)

